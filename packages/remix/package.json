{
  "name": "@sentry/remix",
  "version": "9.10.0",
  "description": "Official Sentry SDK for Remix",
  "repository": "git://github.com/getsentry/sentry-javascript.git",
  "homepage": "https://github.com/getsentry/sentry-javascript/tree/master/packages/remix",
  "author": "Sentry",
  "license": "MIT",
  "bin": {
    "sentry-upload-sourcemaps": "scripts/sentry-upload-sourcemaps.js"
  },
  "engines": {
    "node": ">=18"
  },
  "files": [
    "/build",
    "/scripts"
  ],
  "main": "build/cjs/index.server.js",
  "module": "build/esm/index.server.js",
  "browser": "build/esm/index.client.js",
  "types": "build/types/index.types.d.ts",
  "exports": {
    "./package.json": "./package.json",
    ".": {
      "types": "./build/types/index.types.d.ts",
      "browser": {
        "import": "./build/esm/index.client.js",
        "require": "./build/cjs/index.client.js"
      },
      "node": "./build/cjs/index.server.js"
    },
    "./cloudflare": {
      "import": "./build/esm/cloudflare/index.js",
      "require": "./build/cjs/cloudflare/index.js",
      "types": "./build/types/cloudflare/index.d.ts",
      "default": "./build/esm/cloudflare/index.js"
    },
    "./import": {
      "import": {
        "default": "./build/import-hook.mjs"
      }
    },
    "./loader": {
      "import": {
        "default": "./build/loader-hook.mjs"
      }
    }
  },
  "typesVersions": {
    "<5.0": {
      "build/types/index.d.ts": [
        "build/types-ts3.8/index.d.ts"
      ]
    }
  },
  "publishConfig": {
    "access": "public"
  },
  "dependencies": {
    "@opentelemetry/api": "^1.9.0",
    "@remix-run/router": "1.x",
    "@sentry/cli": "^2.42.3",
    "@sentry/core": "9.10.0",
    "@sentry/node": "9.10.0",
    "@sentry/opentelemetry": "9.10.0",
    "@sentry/react": "9.10.0",
    "glob": "^10.3.4",
    "opentelemetry-instrumentation-remix": "0.8.0",
    "yargs": "^17.6.0"
  },
  "devDependencies": {
    "@remix-run/node": "^2.15.2",
    "@remix-run/react": "^2.15.2",
    "@types/express": "^4.17.14",
    "vite": "^5.4.11"
  },
  "peerDependencies": {
    "@remix-run/node": "2.x",
    "@remix-run/react": "2.x",
    "react": "18.x"
  },
  "scripts": {
    "build": "run-p build:transpile build:types",
    "build:dev": "yarn build",
    "build:transpile": "rollup -c rollup.npm.config.mjs",
    "build:types": "run-s build:types:core build:types:downlevel",
    "build:types:core": "tsc -p tsconfig.types.json",
    "build:types:downlevel": "yarn downlevel-dts build/types build/types-ts3.8 --to ts3.8",
    "build:watch": "run-p build:transpile:watch build:types:watch",
    "build:dev:watch": "yarn build:watch",
    "build:transpile:watch": "rollup -c rollup.npm.config.mjs --watch",
    "build:types:watch": "tsc -p tsconfig.types.json --watch",
    "build:tarball": "npm pack",
    "circularDepCheck": "madge --circular src/index.server.ts && madge --circular src/index.client.ts",
    "clean": "rimraf build coverage sentry-remix-*.tgz",
    "fix": "eslint . --format stylish --fix",
    "lint": "eslint . --format stylish",
    "test": "yarn test:unit",
    "test:integration": "run-s test:integration:clean test:integration:prepare test:integration:client test:integration:server",
    "test:integration:ci": "run-s test:integration:clean test:integration:prepare test:integration:client:ci test:integration:server",
    "test:integration:prepare": "(cd test/integration && yarn install)",
    "test:integration:clean": "(cd test/integration && rimraf .cache node_modules build)",
    "test:integration:client": "yarn playwright install-deps && yarn playwright test test/integration/test/client/ --project='chromium'",
    "test:integration:client:ci": "yarn test:integration:client",
    "test:integration:server": "export NODE_OPTIONS='--stack-trace-limit=25' && vitest run",
    "test:unit": "vitest run --config vitest.config.unit.ts",
    "test:watch": "vitest --watch --config vitest.config.unit.ts",
    "yalc:publish": "yalc publish --push --sig"
  },
  "volta": {
    "extends": "../../package.json"
  },
  "sideEffects": false
}
