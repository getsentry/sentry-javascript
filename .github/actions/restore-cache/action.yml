name: "Restore dependency & build cache"
description: "Restore the dependency & build cache."

inputs:
  dependency_cache_key:
    description: "The dependency cache key"
    required: true
  node_version:
    description: "If set, temporarily set node version to default one before installing, then revert to this version after."
    required: false

runs:
  using: "composite"
  steps:
      - name: Check dependency cache
        id: dep-cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ inputs.dependency_cache_key }}

      - name: Restore build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output

      - name: Use default node version for install
        if: inputs.node_version && steps.dep-cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'

      - name: Install dependencies
        if: steps.dep-cache.outputs.cache-hit != 'true'
        run: yarn install --ignore-engines --frozen-lockfile
        shell: bash

      - name: Revert node version to ${{ inputs.node_version }}
        if: inputs.node_version && steps.dep-cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
