{
  "private": true,
  "scripts": {
    "build": "node ./scripts/verify-packages-versions.js && lerna run build:transpile,build:types,build:bundle",
    "build:bundle": "lerna run build:bundle",
    "build:dev": "lerna run build:types,build:transpile",
    "build:dev:filter": "lerna run build:dev --include-filtered-dependencies --include-filtered-dependents --scope",
    "build:transpile": "lerna run build:transpile",
    "build:types": "lerna run build:types",
    "build:watch": "lerna run build:watch",
    "build:dev:watch": "lerna run build:dev:watch",
    "build:types:watch": "ts-node scripts/build-types-watch.ts",
    "build:tarball": "run-s clean:tarballs build:tarballs",
    "build:tarballs": "lerna run build:tarball",
    "circularDepCheck": "lerna run circularDepCheck",
    "clean": "run-s clean:build clean:caches",
    "clean:build": "lerna run clean",
    "clean:caches": "yarn rimraf eslintcache .nxcache .nx && yarn jest --clearCache",
    "clean:deps": "lerna clean --yes && rm -rf node_modules && yarn",
    "clean:tarballs": "rimraf {packages,dev-packages}/*/*.tgz",
    "clean:watchman": "watchman watch-del \".\"",
    "clean:all": "run-s clean:build clean:tarballs clean:caches clean:deps clean:watchman",
    "fix": "run-s fix:biome fix:prettier fix:lerna",
    "fix:lerna": "lerna run fix",
    "fix:biome": "biome check --apply .",
    "fix:prettier": "prettier \"**/*.md\" \"**/*.css\" --write",
    "changelog": "ts-node ./scripts/get-commit-list.ts",
    "link:yarn": "lerna exec yarn link",
    "lint": "run-s lint:lerna lint:biome lint:prettier",
    "lint:clang": "lerna run lint:clang",
    "lint:lerna": "lerna run lint",
    "lint:biome": "biome check .",
    "lint:prettier": "prettier \"**/*.md\" \"**/*.css\" --check",
    "lint:es-compatibility": "es-check es2020 ./packages/*/build/{bundles,npm/cjs,cjs}/*.js && es-check es2020 ./packages/*/build/{npm/esm,esm}/*.js --module",
    "postpublish": "lerna run --stream --concurrency 1 postpublish",
    "test": "lerna run --ignore \"@sentry-internal/{browser-integration-tests,e2e-tests,integration-shims,node-integration-tests}\" test",
    "test:unit": "lerna run --ignore \"@sentry-internal/{browser-integration-tests,e2e-tests,integration-shims,node-integration-tests}\" test:unit",
    "test:update-snapshots": "lerna run test:update-snapshots",
    "test:pr": "nx affected -t test --exclude \"@sentry-internal/{browser-integration-tests,e2e-tests,integration-shims,node-integration-tests}\"",
    "test:pr:browser": "UNIT_TEST_ENV=browser ts-node ./scripts/ci-unit-tests.ts --affected",
    "test:pr:node": "UNIT_TEST_ENV=node ts-node ./scripts/ci-unit-tests.ts --affected",
    "test:ci:browser": "UNIT_TEST_ENV=browser ts-node ./scripts/ci-unit-tests.ts",
    "test:ci:node": "UNIT_TEST_ENV=node ts-node ./scripts/ci-unit-tests.ts",
    "test:ci:bun": "lerna run test --scope @sentry/bun",
    "yalc:publish": "lerna run yalc:publish"
  },
  "volta": {
    "node": "18.20.5",
    "yarn": "1.22.22",
    "pnpm": "9.15.0"
  },
  "workspaces": [
    "packages/angular",
    "packages/astro",
    "packages/aws-serverless",
    "packages/browser",
    "packages/browser-utils",
    "packages/bun",
    "packages/core",
    "packages/cloudflare",
    "packages/deno",
    "packages/ember",
    "packages/eslint-config-sdk",
    "packages/eslint-plugin-sdk",
    "packages/feedback",
    "packages/gatsby",
    "packages/google-cloud-serverless",
    "packages/integration-shims",
    "packages/nestjs",
    "packages/nextjs",
    "packages/node",
    "packages/nuxt",
    "packages/opentelemetry",
    "packages/profiling-node",
    "packages/react",
    "packages/remix",
    "packages/replay-internal",
    "packages/replay-canvas",
    "packages/replay-worker",
    "packages/solid",
    "packages/solidstart",
    "packages/svelte",
    "packages/sveltekit",
    "packages/types",
    "packages/typescript",
    "packages/vercel-edge",
    "packages/vue",
    "packages/wasm",
    "dev-packages/browser-integration-tests",
    "dev-packages/bundle-analyzer-scenarios",
    "dev-packages/e2e-tests",
    "dev-packages/node-integration-tests",
    "dev-packages/test-utils",
    "dev-packages/size-limit-gh-action",
    "dev-packages/clear-cache-gh-action",
    "dev-packages/external-contributor-gh-action",
    "dev-packages/rollup-utils"
  ],
  "devDependencies": {
    "@biomejs/biome": "^1.5.2",
    "@rollup/plugin-commonjs": "^25.0.7",
    "@rollup/plugin-esm-shim": "^0.1.5",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^15.2.3",
    "@rollup/plugin-replace": "^5.0.5",
    "@rollup/plugin-sucrase": "^5.0.2",
    "@rollup/plugin-terser": "^0.4.4",
    "@rollup/plugin-typescript": "^11.1.6",
    "@rollup/pluginutils": "^5.1.0",
    "@size-limit/file": "~11.1.6",
    "@size-limit/webpack": "~11.1.6",
    "@types/jest": "^27.4.1",
    "@types/jsdom": "^21.1.6",
    "@types/node": "^18.19.1",
    "@vitest/coverage-v8": "^2.1.8",
    "deepmerge": "^4.2.2",
    "downlevel-dts": "~0.11.0",
    "es-check": "^7.2.1",
    "eslint": "7.32.0",
    "jest": "^27.5.1",
    "jest-environment-node": "^27.5.1",
    "jsdom": "^21.1.2",
    "lerna": "7.1.1",
    "madge": "7.0.0",
    "nodemon": "^2.0.16",
    "npm-run-all2": "^6.2.0",
    "prettier": "^3.1.1",
    "rimraf": "^5.0.10",
    "rollup": "^4.24.2",
    "rollup-plugin-cleanup": "^3.2.1",
    "rollup-plugin-license": "^3.3.1",
    "size-limit": "~11.1.6",
    "sucrase": "^3.35.0",
    "ts-jest": "^27.1.4",
    "ts-node": "10.9.1",
    "typescript": "~5.0.0",
    "vitest": "^2.1.8",
    "yalc": "^1.0.0-pre.53"
  },
  "//_resolutions_comment": [
    "Because new versions of strip-ansi, string-width, and wrap-ansi are ESM only packages,",
    "we need to resolve them to the CommonJS versions.",
    "This is a temporary solution until we can upgrade to a version of lerna that supports ESM packages"
  ],
  "resolutions": {
    "gauge/strip-ansi": "6.0.1",
    "wide-align/string-width": "4.2.3",
    "cliui/wrap-ansi": "7.0.0",
    "**/sucrase": "getsentry/sucrase#es2020-polyfills"
  },
  "version": "0.0.0",
  "name": "sentry-javascript",
  "prettier": {
    "arrowParens": "avoid",
    "printWidth": 120,
    "proseWrap": "always",
    "singleQuote": true,
    "trailingComma": "all",
    "overrides": [
      {
        "files": "*.md",
        "options": {
          "proseWrap": "preserve"
        }
      }
    ]
  }
}
